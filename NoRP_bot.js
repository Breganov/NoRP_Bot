// —Ç—É—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è API –¥–ª—è –î–∏—Å–∫–æ—Ä–¥–∞ –Ω–∞ JavaScript
// –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ: https://discord.js.org/#/docs/main/stable/general/welcome
// 04 –Ω–æ—è–±—Ä—è 2020 —Å–ª–æ–º–∞–ª–∏—Å—å —Ä–æ–ª–∏. –ù–∞–¥–æ –ø–æ—á–∏–Ω–∏—Ç—å
const { Console } = require('console')
const Discord = require('discord.js')
const config = require('./config/config.json')
const client = new Discord.Client()

// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–æ—Ç–∞, –≥–æ–≤–æ—Ä–∏—Ç, –∫–µ–º –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è –∏ —É—Å—Ç–∞–Ω–∞–ª–∏–≤–∞–µ—Ç —Å–ª–æ–≤–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ 
// –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–ª–µ–π —Å–æ —Å–ª–æ–≤–æ–º WATCHING YOU.
client.on('ready', () => {
    console.log("Connected as " + client.user.tag)
    client.user.setActivity("YOU", {type: "WATCHING"})
})
    
// –¢—É—Ç —Ö–≤–∞—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–µ–π processCommand –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–æ–º –Ω–∞ "!" —Å–∏–º–≤–æ–ª.
// –ê –ø–µ—Ä–µ–¥ —ç—Ç–∏–º –ø—Ä–æ–≤–µ—Ä—è–µ–º. –ë–æ—Ç –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ? –ï—Å–ª–∏ –¥–∞, —Ç–æ –¥–∞–ª—å—à–µ –¥–∞–∂–µ –Ω–µ —Å–º–æ—Ç—Ä–∏–º.
client.on('message', (receivedMessage) => {
    if (receivedMessage.author.bot || (receivedMessage.guild === null)) return
    if (receivedMessage.content.startsWith("!")){
        processCommand(receivedMessage)
    }
})

// –ö–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–æ –æ—Ç—Ä–ø–∞–≤–ª—è–µ–º –µ–º—É —Ü–µ–ª—ã–π –Ω–∞–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π.
// –í–æ–∑–º–æ–∂–Ω–æ —Ç—É—Ç –æ—à–∏–±–∫–∞ —Ç–µ–ø–µ—Ä—å —Å –Ω–æ–≤—ã–º –≤–∏–¥–æ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π member

// client.on('guildMemberAdd', (member) => {
//     var fs = require("fs")
//     var text = fs.readFileSync("./text/greetings.txt").toString('utf-8')
//     var text2 = fs.readFileSync("./text/hello.txt").toString('utf-8')
//     member.user.send("<@" + member.user.id + ">" + text)
//     client.channels.get('561618305002242048').send("<@" + member.user.id + ">" + text2)
// })

client.on('error', console.error);

function processCommand (receivedMessage){
    let fullCommand = receivedMessage.content.substr(1) // Remove the leading exclamation mark
    let splitCommand = fullCommand.split(" ") // Split the message up in to pieces for each space
    let primaryCommand = splitCommand[0].toLowerCase() // The first word directly after the exclamation is the command
    let arguments = splitCommand.slice(1) // All other words are arguments/parameters/options for the command
    let allTail = fullCommand.substr(fullCommand.indexOf(' ')+1); // Taking tail for Role argument

    if (fullCommand === "–ø—Ä–∏–≤–µ—Ç"){
        receivedMessage.channel.send("–ü—Ä–∏–≤–µ—Ç, " + receivedMessage.author.toString() + "!")
        receivedMessage.react("üññ")
            .then(() => receivedMessage.react('üáµ'))
            .then(() => receivedMessage.react('üá∑'))
            .then(() => receivedMessage.react('üáÆ'))
            .then(() => receivedMessage.react('üáª'))
            .then(() => receivedMessage.react('üá™'))
            .then(() => receivedMessage.react('üáπ'))
            .then(() => receivedMessage.react('592747816565342218'));
    }

    if (primaryCommand === "–ø–æ–º–æ—â—å"){
        var fs = require("fs")
        var text = fs.readFileSync("./text/greetings.txt").toString('utf-8')
        receivedMessage.react('592747816565342218')
        receivedMessage.author.send("<@" + receivedMessage.author.id + ">\n" + text)
    }

    if (primaryCommand === "–ª–µ–≥–µ–Ω–¥—É") {
        var legend = generateLegend()
        showEmbed(receivedMessage, `–õ–µ–≥–µ–Ω–¥–∞ –¥–ª—è Forbidden Lands`, legend)
    }

    if (primaryCommand === "—è") {
        let systemAnswerHasRoles =       []
        let systemAnswerHasNoRoles =     []
        let systemAnswerNoRolesInGuild = []
        let finalMessageText = []
        let receivedRolesNamesFromMemberArray = allTail.split(/\n![—è–Ø]\s/gi).filter(Boolean)
        let rolesToAddArray = []

        if (receivedRolesNamesFromMemberArray.length > 0) {
            receivedRolesNamesFromMemberArray.forEach(role => {
                if (receivedMessage.member.roles.cache.some(hasRole => hasRole.name === role)) {
                    systemAnswerHasRoles.push(role)
                } else {
                    if (receivedMessage.guild.roles.cache.some(hasRoles => hasRoles.name === role)) {
                        systemAnswerHasNoRoles.push(role)
                        var foundRoleID = receivedMessage.guild.roles.cache.find(r => r.name === role)
                        rolesToAddArray.push(foundRoleID)
                    } else {
                        systemAnswerNoRolesInGuild.push(role)
                    }
                }
            });
        } else {
            finalMessageText.push(`–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ä–æ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ \`!—è –ù–∞–∑–≤–∞–Ω–∏–µ –†–æ–ª–∏\``)
        }

        
        if (rolesToAddArray.length > 0) receivedMessage.member.roles.add(rolesToAddArray)
        
        if (rolesToAddArray.length > 0) finalMessageText.push(`**–î–æ–±–∞–≤–∏–ª –≤–∞–º —Ä–æ–ª—å(–∏)**:\n${systemAnswerHasNoRoles.join(' ‚Ä¢ ')}`)
        if (systemAnswerHasRoles.length > 0) finalMessageText.push(`**–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å(–∏)**:\n${systemAnswerHasRoles.join(' ‚Ä¢ ')}`)
        if (systemAnswerNoRolesInGuild.length > 0) finalMessageText.push(`**–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —Ä–æ–ª–µ–π** (_–Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –¥–æ–±–∞–≤–∏—Ç—å_):\n${systemAnswerNoRolesInGuild.join(' ‚Ä¢ ')}`)
        receivedMessage.channel.send(`${finalMessageText.join('\n')}`)
    }

    if (primaryCommand === "—è–Ω–µ") {
        let systemAnswerHasRoles =       []
        let systemAnswerHasNoRoles =     []
        let systemAnswerNoRolesInGuild = []
        let finalMessageText = []
        let receivedRolesNamesFromMemberArray = allTail.split(/\n![—è–Ø]–Ω–µ\s/gi).filter(Boolean)
    let rolesToRemove = []

        if (receivedRolesNamesFromMemberArray.length > 0) {
            receivedRolesNamesFromMemberArray.forEach(role => {
                if (receivedMessage.member.roles.cache.some(hasRole => hasRole.name === role)) {
                    systemAnswerHasRoles.push(role)
                    var foundRoleID = receivedMessage.guild.roles.cache.find(r => r.name === role)
                    rolesToRemove.push(foundRoleID)
                } else {
                    if (receivedMessage.guild.roles.cache.some(hasRoles => hasRoles.name === role)) {
                        systemAnswerHasNoRoles.push(role)
                    } else {
                        systemAnswerNoRolesInGuild.push(role)
                    }
                }
            });
        } else {
            finalMessageText.push(`–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ä–æ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ \`!—è–Ω–µ –ù–∞–∑–≤–∞–Ω–∏–µ –†–æ–ª–∏\``)
        }

        
        if (rolesToRemove.length > 0) receivedMessage.member.roles.remove(rolesToRemove)
        
        if (rolesToRemove.length > 0) finalMessageText.push(`**–£–¥–∞–ª–∏–ª —É –≤–∞—Å —Ä–æ–ª—å(–∏)**:\n${systemAnswerHasRoles.join(' ‚Ä¢ ')}`)
        if (systemAnswerHasNoRoles.length > 0) finalMessageText.push(`**–£ –≤–∞—Å —É–∂–µ –Ω–µ—Ç —Ä–æ–ª–∏(–µ–π)**:\n${systemAnswerHasRoles.join(' ‚Ä¢ ')}`)
        if (systemAnswerNoRolesInGuild.length > 0) finalMessageText.push(`**–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —Ä–æ–ª–µ–π** (_–Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –¥–æ–±–∞–≤–∏—Ç—å_):\n${systemAnswerNoRolesInGuild.join(' ‚Ä¢ ')}`)
        receivedMessage.channel.send(`${finalMessageText.join('\n')}`)
    }

    if (primaryCommand === "—Å–∏—Å—Ç–µ–º—ã") {
        var roles = receivedMessage.guild.roles.cache.filter(role => role.color === 1752220).map(role => role.name)
        let users = ''
        
        roles.forEach(system => {
            if ((system != '@everyone')){
                // #f1c40f -- city
                // #1abc9c -- system, FATAL (+1) color name == '1752220'
                // if (system.color == 1752220) users += `!—è ${system.name}\n`
                users += `!—è ${system}\n`
            }
        });

        users += `!—è FATAL\n`
        sendEmbed(receivedMessage, `–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏ —Å–∏—Å—Ç–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **No Roleplaying**. –ö–æ–ø–∏—Ä—É–π, –≤—Å—Ç–∞–≤–ª—è–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π –æ–¥–Ω—É –∏–∑ —Ñ—Ä–∞–∑ –Ω–∏–∂–µ:`, users)
        receivedMessage.react('592747816565342218')
        receivedMessage.author.send(`–ü–æ–ø—Ä–æ—Å–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É, –µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç —Ç–≤–æ–µ–π –ª—é–±–∏–º–æ–π.`)
    }

    if (primaryCommand === "–≥–æ—Ä–æ–¥–∞") {
        var cities = receivedMessage.guild.roles.cache.filter(role => role.color === 15844367).map(role => role.name)
        let users = ''
        
        cities.forEach(city => {
            if ((city != '@everyone')){
                // #f1c40f -- city
                // #1abc9c -- system, FATAL (+1) color name == '1752220'
                // if (system.color == 1752220) users += `!—è ${system.name}\n`
                users += `!—è ${city}\n`
            }
        });

        sendEmbed(receivedMessage, `–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏ –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **No Roleplaying**:`, users)
        receivedMessage.react('592747816565342218')
        receivedMessage.author.send(`–ü–æ–ø—Ä–æ—Å–∏ –¥–æ–±–∞–≤–∏—Ç—å —Ç–≤–æ–π , –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ.`)
    }

    if (primaryCommand === "–∫–æ–º–∞–Ω–¥—ã") {
        var fs = require("fs")
        var text = fs.readFileSync("./text/commands.txt").toString('utf-8')
        receivedMessage.react('592747816565342218')
        receivedMessage.author.send("<@" + receivedMessage.author.id + ">\n" + text)
        // receivedMessage.author.send("<@" + receivedMessage.author.id + ">\n" + text)
        // receivedMessage.channel.send(`<@${receivedMessage.author.id}>, –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!`)
    }

    if (primaryCommand === "–∫—Ç–æ") {
        who(allTail, receivedMessage)
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª—è–º
// –ú–æ–∂–µ—Ç –∏—Å–∫–∞—Ç—å –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Ä–∞–∑–Ω—ã–º —Ä–æ–ª—è–º —á–µ—Ä–µ–∑ —Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ò
// –ë–µ—Ä—ë–º —Ö–≤–æ—Å—Ç –∏ —Ä–µ–∂–µ–º –µ–≥–æ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –∏ –ò
// –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å
// –°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–¥–∏–Ω–æ–∂–¥—ã –∏ —Ö—Ä–∞–Ω–∏–º –≤ roles
// –í—ã–≤–æ–¥–∏–º —Å–æ–æ—â–µ–Ω–∏–µ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ª—é–¥–µ–π –∏ –ø–µ—Ä–µ—á–∏—Å–ª–∏—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ª—é–¥–µ–π

function who(tail, message) {
    // message.channel.send("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏—è \`!–∫—Ç–æ\` –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –í–µ–¥—É—Ç—Å—è —Ä–∞–±–æ—Ç—ã. –°–∫–æ—Ä–æ –ø–æ—á–∏–Ω–∏–º.")
    
    // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    
    // –†–∞–∑–¥–µ–ª–∏—Ç—å, –µ—Å–ª–∏ –±—ã–ª–∏ —Å–æ—á–µ—Ç–∞–Ω–∏—è –ø–æ –ò

    // –í–∑—è—Ç—å —É —Å–µ—Ä–≤–µ—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –æ–¥–Ω–æ–π —Ä–æ–ª–∏

    // –ï—Å–ª–∏ –±—ã–ª–∞ –≤—Ç–æ—Ä–∞—è —Ä–æ–ª—å, —Ç–æ —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤—Ç–æ—Ä–æ–π —Ä–æ–ª–∏

    // –ï—Å–ª–∏ –±—ã–ª–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Ä–æ–ª–∏, —Ç–æ —Å—Ä–∞–Ω–∏—Ç—å –¥–≤–∞ —Å–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è

    // –ï—Å–ª–∏ –±—ã–ª–∞ —Ç–æ–ª–∫–æ –æ–¥–Ω–∞ —Ä–æ–ª—å, —Ç–æ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–º–µ–Ω–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    // –£ –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç–µ, –∫–æ–≥–¥–∞ –Ω–∞–¥–æ –≤–∑—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–µ—Ä–≤–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç
    // —Ç–æ–ª—å–∫–æ –º–µ–Ω—è. –ö–∞–∫ –±—É–¥—Ç–æ –±—ã –≤–æ–æ–±—â–µ –Ω–∏–∫–æ–≥–æ –±–æ–ª—å—à–µ –Ω–µ—Ç.
    
    var enteredRolesByUser = tail.split(" –ò ")
    var guildRoles = message.guild.roles.cache
    var members = []
    var users = ``

    // –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ 
    var rolesNotFoundArray = []
    var rolesFoundInGuildArray = []
    var finalMessage = []
    var rolesIDsByName = []
    var membersWithRole = []
    
    // –ø—Ä–æ–≤–µ—Ä–∏–ª, –∞ –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –≤–æ–æ–±—â–µ —ç—Ç–∏ —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ?
    // —Å–æ—Å—Ç–∞–≤–∏–ª –¥–≤–∞ —Å–ø–∏—Å–∫–∞: —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å, –∏ —Ç–µ, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç.
    // –¥–∞–ª–µ–µ –≤—ã–≤–µ–¥—É —Å–æ–æ–±–µ—â–Ω–∏–µ –æ —Ç–æ–º, –∫–∞–∫–∏–µ –Ω–∞—à–ª–∏—Å—å, –∞ –∫–∞–∫–∏–µ –Ω–µ –Ω–∞—à–ª–∏—Å—å.
    enteredRolesByUser.forEach(role => {
        if (guildRoles.find(r => r.name === role) == null){
            rolesNotFoundArray.push(role)
        } else {
            rolesFoundInGuildArray.push(role)
        }
    });

    let testRoleName = rolesFoundInGuildArray[0]



    // console.log(rolesNotFoundArray + '\n' + rolesFounInGuildArray)
    
    // // —Ç—É—Ç –Ω–∞—à—ë–ª ID –≤—Å–µ—Ö —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    // rolesFoundInGuildArray.forEach(roleName => {
    //     rolesIDsByName.push(message.guild.roles.cache.get(roleID => roleID.name === roleName).members.array())
    // });

    // // // if (rolesFoundInGuildArray.length = 1) 
    // // let roleID = rolesIDsByName[0].id
    // membersWithRole = message.guild.roles.cache.get().members.array()//.map(m => m.user.tag)
    
    // console.log(membersWithRole);
    // roleID = message.guild.roles.cache.find(r => r.name === rolesFoundInGuildArray[0])
    // console.log(roleID.id)
    // if (rolesFoundInGuildArray.length > 0) finalMessage.push(`**–î–ª—è —Ä–æ–ª–∏ ${rolesFoundInGuildArray[0]} –Ω–∞—à—ë–ª**: ${message.guild.roles.cache.get(`${roleID.id}`).members.array()}`) //\n${membersWithRole.join(` ‚Ä¢ `)
    // if (rolesNotFoundArray.length > 0) finalMessage.push(`**–ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏**:\n${rolesNotFoundArray.join(` ‚Ä¢ `)}`)
    
    // message.channel.send(finalMessage.join(`\n`))

    // if (members === undefined || members.length == 0) {
    //     return
    // }

    // // –¢—É—Ç —è –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞—Å–∫–æ–ª—å–∫–æ –º–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π –¥–ª—è –ø–æ–∏—Å–∫–∞
    // // –ï—Å–ª–∏ –æ–¥–Ω–∞, —Ç–æ –∏–¥—ë–º –∏—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ –Ω–µ–π –∏ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–ø–∏—Å–æ–∫
    // // –ï—Å–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π, —Ç–æ –∏–¥—ë–º —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–ø–∏—Å–∫–∏ –∏ –ø–æ–¥ —Å–ø–∏—Å–∫–∏ —Å–ø–∏—Å–∫–æ–≤ –¥—Ä—É–≥ –∏–∑ –¥—Ä—É–≥–∞, –ø–æ–∫–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è.
    // if (members.length == 1) {
    //     // console.log(`Entered equal 1: ${members.length} and ${members[0].length}\n\n`)
    //     const member_list = members[0]
    //     for (let i = 0; i < members[0].length; i++) {
    //         users += `@${members[0][i]}\n`
    //     }
    //     showEmbed(message, `–ù–∞—à—ë–ª ${members[0].length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–µ–π):`, users)
    // } else {
    //     let sub = []
    //     let users = ``
    //     let functionValues
    //     for (let i = 0; i < members.length; i++) {
    //         if (i == 0){
    //             functionValues = compareTwoLists(members[i], members[i+1])  
    //         } else if ((i + 1) < members.length) {
    //             functionValues = compareTwoLists(sub, members[i+1]) 
    //         }
    //         sub = functionValues[0]
    //         users = functionValues[1]
    //         // console.log(users)
    //     }
    //     showEmbed(message, `–ù–∞—à—ë–ª ${sub.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–µ–π):`, users)
    // }

    // –ü–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É –æ–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –û—Ç—á–µ–≥–æ showEmbed –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è?
    // if (rolesNotFoundArray > 0) showEmbed(message, `–ù–µ –Ω–∞—à—ë–ª —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:`, rolesNotFoundArray)
}

function compareTwoLists(list1, list2){
    let users = ``
    let sub = [list1, list2].reduce((a, b) => a.filter(c => b.includes(c)))
    for (let m = 0; m < sub.length; m++) {
        users += `@${sub[m]}\n`
    }
    return [sub, users] 
}


function sendEmbed(message, title, users) {
    console.log(`\n–î–ª–∏–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π users: ${users.length}\n===`)
    if (users.length > 2001) {
        for (let i = 0; i < Math.ceil(users.length / 2000); i++) {
            
            // console.log(`–ü—Ä–æ—à—ë–ª –∫—Ä—É–≥ ${i+1}.\n`)
            
            const Embed = new Discord.MessageEmbed()
            .setColor('#0099ff')
            .setTitle(title + ` [${i + 1}]`)
            .setDescription(users.substring(i * 2000, (i + 1) * 2000))
            
            message.author.send(Embed)
            
            // console.log(`I've sent: ${users.substring(i * 2000, (i + 1) * 2000)}.`)
        }
    } else { 
        const Embed = new Discord.MessageEmbed()
        .setColor('#0099ff')
        .setTitle(title)
        .setDescription(users)
        
        message.author.send(Embed)
    }
}

function showEmbed(message, title, users){

    if (users.length > 2001) {
        
        // console.log(`users.length: ${users.length}`)
        
        for (let i = 0; i < Math.ceil(users.length / 2000); i++) {

            const Embed = new Discord.MessageEmbed()
            .setColor('#0099ff')
            .setTitle(title + ` [${i + 1}]`)
            .setDescription(users.substring(i * 2000, (i + 1) * 2000))

            message.channel.send(Embed)
        }
    } else {
        const Embed = new Discord.MessageEmbed()
        .setColor('#0099ff')
        .setTitle(title)
        .setDescription(users)
        
        message.channel.send(Embed)
    }
}

/*
// FORBIDDEN LANDS LEGEND GENERATOR
*/

function getRandomInt(min, max) {
    min = Math.ceil(min)
    max = Math.floor(max)
    return Math.floor(Math.random() * (max - min + 1)) + min //The maximum is exclusive and the minimum is inclusive
}

function rollndm(n, m){
    var roll = 0
    for (let i = 0; i < n; i++) {
        roll += getRandomInt(1, m)
    }
    return roll
}


function readTable(filename){
    var fs = require("fs")
    var text = fs.readFileSync(`./${filename}.txt`).toString('UTF-8')
    text = text.split('\n')
    return text
}

function rollTable(txtfilename){
    var data = readTable(txtfilename)
    var diceAndWeights = data[0].replace(/(\r\n|\n|\r)/gm,"").split(', ')
    data.shift()
    var variants = data

    var dice = parseInt(diceAndWeights[0].substring(1))
    var roll = rollndm(1, dice)
    diceAndWeights.shift()
    var tableWeights = diceAndWeights.map(Number)
    
    for (let i = 0; i < variants.length; i++) {
        const element = variants[i]
        if (tableWeights[i] >= roll){
            return ` ${element.replace(/(\r\n|\n|\r)/gm,"")}`
        }
    }
}

function generateLegend() {
    var phrase = 'A long time ago'
    var tableNames = ['A long time ago',
                    'There was a 1',
                    'There was a 2',
                    'Who sought',
                    'Because of',
                    'And traveled to', 'Located',
                    'In asome',
                    'In the direction of',
                    'As the Legend goes',
                    'And that at the location',
                    'But also 1',
                    'But also 2']

    for (let i = 0; i < tableNames.length; i++) {
        const table = 'text/forbidden_lands/' + tableNames[i]
        phrase += rollTable(table)
    }
    return phrase
}

client.login(config.discord_bot.token)